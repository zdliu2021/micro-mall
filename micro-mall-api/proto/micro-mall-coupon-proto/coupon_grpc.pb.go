// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: mall-demo/micro-mall-api/proto/micro-mall-coupon-proto/coupon.proto

package proto_coupon

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CouponRpcClient is the client API for CouponRpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CouponRpcClient interface {
	SaveSkuLadder(ctx context.Context, in *SaveSkuLadderRequest, opts ...grpc.CallOption) (*SaveSkuLadderResponse, error)
	SaveSkuFullReduction(ctx context.Context, in *SaveSkuFullReductionRequest, opts ...grpc.CallOption) (*SaveSkuFullReductionResponse, error)
	SaveSpuBounds(ctx context.Context, in *SaveSpuBoundsRequest, opts ...grpc.CallOption) (*SaveSpuboundsResponse, error)
	SaveMemberPrice(ctx context.Context, in *SaveMemberPriceRequest, opts ...grpc.CallOption) (*SaveMemberPriceResponse, error)
}

type couponRpcClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponRpcClient(cc grpc.ClientConnInterface) CouponRpcClient {
	return &couponRpcClient{cc}
}

func (c *couponRpcClient) SaveSkuLadder(ctx context.Context, in *SaveSkuLadderRequest, opts ...grpc.CallOption) (*SaveSkuLadderResponse, error) {
	out := new(SaveSkuLadderResponse)
	err := c.cc.Invoke(ctx, "/proto_coupon.CouponRpc/SaveSkuLadder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponRpcClient) SaveSkuFullReduction(ctx context.Context, in *SaveSkuFullReductionRequest, opts ...grpc.CallOption) (*SaveSkuFullReductionResponse, error) {
	out := new(SaveSkuFullReductionResponse)
	err := c.cc.Invoke(ctx, "/proto_coupon.CouponRpc/SaveSkuFullReduction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponRpcClient) SaveSpuBounds(ctx context.Context, in *SaveSpuBoundsRequest, opts ...grpc.CallOption) (*SaveSpuboundsResponse, error) {
	out := new(SaveSpuboundsResponse)
	err := c.cc.Invoke(ctx, "/proto_coupon.CouponRpc/SaveSpuBounds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponRpcClient) SaveMemberPrice(ctx context.Context, in *SaveMemberPriceRequest, opts ...grpc.CallOption) (*SaveMemberPriceResponse, error) {
	out := new(SaveMemberPriceResponse)
	err := c.cc.Invoke(ctx, "/proto_coupon.CouponRpc/SaveMemberPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponRpcServer is the server API for CouponRpc service.
// All implementations must embed UnimplementedCouponRpcServer
// for forward compatibility
type CouponRpcServer interface {
	SaveSkuLadder(context.Context, *SaveSkuLadderRequest) (*SaveSkuLadderResponse, error)
	SaveSkuFullReduction(context.Context, *SaveSkuFullReductionRequest) (*SaveSkuFullReductionResponse, error)
	SaveSpuBounds(context.Context, *SaveSpuBoundsRequest) (*SaveSpuboundsResponse, error)
	SaveMemberPrice(context.Context, *SaveMemberPriceRequest) (*SaveMemberPriceResponse, error)
	mustEmbedUnimplementedCouponRpcServer()
}

// UnimplementedCouponRpcServer must be embedded to have forward compatible implementations.
type UnimplementedCouponRpcServer struct {
}

func (UnimplementedCouponRpcServer) SaveSkuLadder(context.Context, *SaveSkuLadderRequest) (*SaveSkuLadderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveSkuLadder not implemented")
}
func (UnimplementedCouponRpcServer) SaveSkuFullReduction(context.Context, *SaveSkuFullReductionRequest) (*SaveSkuFullReductionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveSkuFullReduction not implemented")
}
func (UnimplementedCouponRpcServer) SaveSpuBounds(context.Context, *SaveSpuBoundsRequest) (*SaveSpuboundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveSpuBounds not implemented")
}
func (UnimplementedCouponRpcServer) SaveMemberPrice(context.Context, *SaveMemberPriceRequest) (*SaveMemberPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveMemberPrice not implemented")
}
func (UnimplementedCouponRpcServer) mustEmbedUnimplementedCouponRpcServer() {}

// UnsafeCouponRpcServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponRpcServer will
// result in compilation errors.
type UnsafeCouponRpcServer interface {
	mustEmbedUnimplementedCouponRpcServer()
}

func RegisterCouponRpcServer(s grpc.ServiceRegistrar, srv CouponRpcServer) {
	s.RegisterService(&CouponRpc_ServiceDesc, srv)
}

func _CouponRpc_SaveSkuLadder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveSkuLadderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponRpcServer).SaveSkuLadder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_coupon.CouponRpc/SaveSkuLadder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponRpcServer).SaveSkuLadder(ctx, req.(*SaveSkuLadderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponRpc_SaveSkuFullReduction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveSkuFullReductionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponRpcServer).SaveSkuFullReduction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_coupon.CouponRpc/SaveSkuFullReduction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponRpcServer).SaveSkuFullReduction(ctx, req.(*SaveSkuFullReductionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponRpc_SaveSpuBounds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveSpuBoundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponRpcServer).SaveSpuBounds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_coupon.CouponRpc/SaveSpuBounds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponRpcServer).SaveSpuBounds(ctx, req.(*SaveSpuBoundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponRpc_SaveMemberPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveMemberPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponRpcServer).SaveMemberPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_coupon.CouponRpc/SaveMemberPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponRpcServer).SaveMemberPrice(ctx, req.(*SaveMemberPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CouponRpc_ServiceDesc is the grpc.ServiceDesc for CouponRpc service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CouponRpc_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto_coupon.CouponRpc",
	HandlerType: (*CouponRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveSkuLadder",
			Handler:    _CouponRpc_SaveSkuLadder_Handler,
		},
		{
			MethodName: "SaveSkuFullReduction",
			Handler:    _CouponRpc_SaveSkuFullReduction_Handler,
		},
		{
			MethodName: "SaveSpuBounds",
			Handler:    _CouponRpc_SaveSpuBounds_Handler,
		},
		{
			MethodName: "SaveMemberPrice",
			Handler:    _CouponRpc_SaveMemberPrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mall-demo/micro-mall-api/proto/micro-mall-coupon-proto/coupon.proto",
}
