// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: mall-demo/micro-mall-api/proto/micro-mall-product-proto/product.proto

package proto_product

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllGroupAndAttrRelatedWithCatelogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId int64 `protobuf:"varint,1,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
}

func (x *GetAllGroupAndAttrRelatedWithCatelogRequest) Reset() {
	*x = GetAllGroupAndAttrRelatedWithCatelogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGroupAndAttrRelatedWithCatelogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGroupAndAttrRelatedWithCatelogRequest) ProtoMessage() {}

func (x *GetAllGroupAndAttrRelatedWithCatelogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGroupAndAttrRelatedWithCatelogRequest.ProtoReflect.Descriptor instead.
func (*GetAllGroupAndAttrRelatedWithCatelogRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllGroupAndAttrRelatedWithCatelogRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

type AttrGroupAndAtrrsEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId     int64            `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
	AttrGroupName   string           `protobuf:"bytes,2,opt,name=attr_group_name,json=attrGroupName,proto3" json:"attr_group_name,omitempty"`
	CatelogId       int64            `protobuf:"varint,3,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	Descript        string           `protobuf:"bytes,4,opt,name=descript,proto3" json:"descript,omitempty"`
	Icon            string           `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Sort            int32            `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	PmsAttrEntities []*PmsAttrEntity `protobuf:"bytes,7,rep,name=pms_attr_entities,json=pmsAttrEntities,proto3" json:"pms_attr_entities,omitempty"`
}

func (x *AttrGroupAndAtrrsEntity) Reset() {
	*x = AttrGroupAndAtrrsEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrGroupAndAtrrsEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrGroupAndAtrrsEntity) ProtoMessage() {}

func (x *AttrGroupAndAtrrsEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrGroupAndAtrrsEntity.ProtoReflect.Descriptor instead.
func (*AttrGroupAndAtrrsEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{1}
}

func (x *AttrGroupAndAtrrsEntity) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *AttrGroupAndAtrrsEntity) GetAttrGroupName() string {
	if x != nil {
		return x.AttrGroupName
	}
	return ""
}

func (x *AttrGroupAndAtrrsEntity) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *AttrGroupAndAtrrsEntity) GetDescript() string {
	if x != nil {
		return x.Descript
	}
	return ""
}

func (x *AttrGroupAndAtrrsEntity) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AttrGroupAndAtrrsEntity) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AttrGroupAndAtrrsEntity) GetPmsAttrEntities() []*PmsAttrEntity {
	if x != nil {
		return x.PmsAttrEntities
	}
	return nil
}

type GetAllGroupAndAttrRelatedWithCatelogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupAndAtrrsEntities []*AttrGroupAndAtrrsEntity `protobuf:"bytes,1,rep,name=attr_group_and_atrrs_entities,json=attrGroupAndAtrrsEntities,proto3" json:"attr_group_and_atrrs_entities,omitempty"`
}

func (x *GetAllGroupAndAttrRelatedWithCatelogResponse) Reset() {
	*x = GetAllGroupAndAttrRelatedWithCatelogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGroupAndAttrRelatedWithCatelogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGroupAndAttrRelatedWithCatelogResponse) ProtoMessage() {}

func (x *GetAllGroupAndAttrRelatedWithCatelogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGroupAndAttrRelatedWithCatelogResponse.ProtoReflect.Descriptor instead.
func (*GetAllGroupAndAttrRelatedWithCatelogResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllGroupAndAttrRelatedWithCatelogResponse) GetAttrGroupAndAtrrsEntities() []*AttrGroupAndAtrrsEntity {
	if x != nil {
		return x.AttrGroupAndAtrrsEntities
	}
	return nil
}

type GetBrandRelatedWithCatelogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId int64 `protobuf:"varint,1,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
}

func (x *GetBrandRelatedWithCatelogRequest) Reset() {
	*x = GetBrandRelatedWithCatelogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandRelatedWithCatelogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandRelatedWithCatelogRequest) ProtoMessage() {}

func (x *GetBrandRelatedWithCatelogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandRelatedWithCatelogRequest.ProtoReflect.Descriptor instead.
func (*GetBrandRelatedWithCatelogRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{3}
}

func (x *GetBrandRelatedWithCatelogRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

type BrandCatelogRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BrandId     int64  `protobuf:"varint,2,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	BrandName   string `protobuf:"bytes,3,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	CatelogId   int64  `protobuf:"varint,4,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	CatelogName string `protobuf:"bytes,5,opt,name=catelog_name,json=catelogName,proto3" json:"catelog_name,omitempty"`
}

func (x *BrandCatelogRelation) Reset() {
	*x = BrandCatelogRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandCatelogRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandCatelogRelation) ProtoMessage() {}

func (x *BrandCatelogRelation) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandCatelogRelation.ProtoReflect.Descriptor instead.
func (*BrandCatelogRelation) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{4}
}

func (x *BrandCatelogRelation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandCatelogRelation) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *BrandCatelogRelation) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *BrandCatelogRelation) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *BrandCatelogRelation) GetCatelogName() string {
	if x != nil {
		return x.CatelogName
	}
	return ""
}

type GetBrandRelatedWithCatelogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandCatelogRelations []*BrandCatelogRelation `protobuf:"bytes,1,rep,name=brand_catelog_relations,json=brandCatelogRelations,proto3" json:"brand_catelog_relations,omitempty"`
}

func (x *GetBrandRelatedWithCatelogResponse) Reset() {
	*x = GetBrandRelatedWithCatelogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandRelatedWithCatelogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandRelatedWithCatelogResponse) ProtoMessage() {}

func (x *GetBrandRelatedWithCatelogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandRelatedWithCatelogResponse.ProtoReflect.Descriptor instead.
func (*GetBrandRelatedWithCatelogResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{5}
}

func (x *GetBrandRelatedWithCatelogResponse) GetBrandCatelogRelations() []*BrandCatelogRelation {
	if x != nil {
		return x.BrandCatelogRelations
	}
	return nil
}

type DeleteAttrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrIds []int64 `protobuf:"varint,1,rep,packed,name=attr_ids,json=attrIds,proto3" json:"attr_ids,omitempty"`
}

func (x *DeleteAttrRequest) Reset() {
	*x = DeleteAttrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttrRequest) ProtoMessage() {}

func (x *DeleteAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttrRequest.ProtoReflect.Descriptor instead.
func (*DeleteAttrRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAttrRequest) GetAttrIds() []int64 {
	if x != nil {
		return x.AttrIds
	}
	return nil
}

type DeleteAttrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAttrResponse) Reset() {
	*x = DeleteAttrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttrResponse) ProtoMessage() {}

func (x *DeleteAttrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttrResponse.ProtoReflect.Descriptor instead.
func (*DeleteAttrResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{7}
}

type UpdateAttrGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId   int64  `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
	AttrGroupName string `protobuf:"bytes,2,opt,name=attr_group_name,json=attrGroupName,proto3" json:"attr_group_name,omitempty"`
	CatelogId     int64  `protobuf:"varint,3,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	Descript      string `protobuf:"bytes,4,opt,name=descript,proto3" json:"descript,omitempty"`
	Icon          string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Sort          int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *UpdateAttrGroupRequest) Reset() {
	*x = UpdateAttrGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttrGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttrGroupRequest) ProtoMessage() {}

func (x *UpdateAttrGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttrGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateAttrGroupRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAttrGroupRequest) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *UpdateAttrGroupRequest) GetAttrGroupName() string {
	if x != nil {
		return x.AttrGroupName
	}
	return ""
}

func (x *UpdateAttrGroupRequest) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *UpdateAttrGroupRequest) GetDescript() string {
	if x != nil {
		return x.Descript
	}
	return ""
}

func (x *UpdateAttrGroupRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateAttrGroupRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type UpdateAttrGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAttrGroupResponse) Reset() {
	*x = UpdateAttrGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttrGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttrGroupResponse) ProtoMessage() {}

func (x *UpdateAttrGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttrGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateAttrGroupResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{9}
}

type SaveAttrGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId   int64  `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
	AttrGroupName string `protobuf:"bytes,2,opt,name=attr_group_name,json=attrGroupName,proto3" json:"attr_group_name,omitempty"`
	CatelogId     int64  `protobuf:"varint,3,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	Descript      string `protobuf:"bytes,4,opt,name=descript,proto3" json:"descript,omitempty"`
	Icon          string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Sort          int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *SaveAttrGroupRequest) Reset() {
	*x = SaveAttrGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAttrGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAttrGroupRequest) ProtoMessage() {}

func (x *SaveAttrGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAttrGroupRequest.ProtoReflect.Descriptor instead.
func (*SaveAttrGroupRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{10}
}

func (x *SaveAttrGroupRequest) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *SaveAttrGroupRequest) GetAttrGroupName() string {
	if x != nil {
		return x.AttrGroupName
	}
	return ""
}

func (x *SaveAttrGroupRequest) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *SaveAttrGroupRequest) GetDescript() string {
	if x != nil {
		return x.Descript
	}
	return ""
}

func (x *SaveAttrGroupRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SaveAttrGroupRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type SaveAttrGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveAttrGroupResponse) Reset() {
	*x = SaveAttrGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAttrGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAttrGroupResponse) ProtoMessage() {}

func (x *SaveAttrGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAttrGroupResponse.ProtoReflect.Descriptor instead.
func (*SaveAttrGroupResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{11}
}

type DeleteAttrGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId []int64 `protobuf:"varint,1,rep,packed,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
}

func (x *DeleteAttrGroupRequest) Reset() {
	*x = DeleteAttrGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttrGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttrGroupRequest) ProtoMessage() {}

func (x *DeleteAttrGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttrGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteAttrGroupRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteAttrGroupRequest) GetAttrGroupId() []int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return nil
}

type DeleteAttrGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAttrGroupResponse) Reset() {
	*x = DeleteAttrGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttrGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttrGroupResponse) ProtoMessage() {}

func (x *DeleteAttrGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttrGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteAttrGroupResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{13}
}

type SearchSpuInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    // 当前页码
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页记录数
	Keyword   string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                    //检索关键字
	Order     string `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`                        //排序方式
	Sidx      string `protobuf:"bytes,5,opt,name=sidx,proto3" json:"sidx,omitempty"`                          // 排序字段
	CatalogId int64  `protobuf:"varint,6,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	BrandId   int64  `protobuf:"varint,7,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	Status    int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SearchSpuInfoRequest) Reset() {
	*x = SearchSpuInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpuInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpuInfoRequest) ProtoMessage() {}

func (x *SearchSpuInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpuInfoRequest.ProtoReflect.Descriptor instead.
func (*SearchSpuInfoRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{14}
}

func (x *SearchSpuInfoRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchSpuInfoRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSpuInfoRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchSpuInfoRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *SearchSpuInfoRequest) GetSidx() string {
	if x != nil {
		return x.Sidx
	}
	return ""
}

func (x *SearchSpuInfoRequest) GetCatalogId() int64 {
	if x != nil {
		return x.CatalogId
	}
	return 0
}

func (x *SearchSpuInfoRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SearchSpuInfoRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SpuInfoEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId        int64   `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	BrandName      string  `protobuf:"bytes,2,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	CatalogId      int64   `protobuf:"varint,3,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	CatalogName    string  `protobuf:"bytes,4,opt,name=catalog_name,json=catalogName,proto3" json:"catalog_name,omitempty"`
	CreateTime     string  `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Id             int64   `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	PublishStatus  int32   `protobuf:"varint,7,opt,name=publish_status,json=publishStatus,proto3" json:"publish_status,omitempty"`
	SpuDescription string  `protobuf:"bytes,8,opt,name=spu_description,json=spuDescription,proto3" json:"spu_description,omitempty"`
	SpuName        string  `protobuf:"bytes,9,opt,name=spu_name,json=spuName,proto3" json:"spu_name,omitempty"`
	UpdateTime     string  `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Weight         float64 `protobuf:"fixed64,11,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *SpuInfoEntity) Reset() {
	*x = SpuInfoEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInfoEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInfoEntity) ProtoMessage() {}

func (x *SpuInfoEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInfoEntity.ProtoReflect.Descriptor instead.
func (*SpuInfoEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{15}
}

func (x *SpuInfoEntity) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SpuInfoEntity) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *SpuInfoEntity) GetCatalogId() int64 {
	if x != nil {
		return x.CatalogId
	}
	return 0
}

func (x *SpuInfoEntity) GetCatalogName() string {
	if x != nil {
		return x.CatalogName
	}
	return ""
}

func (x *SpuInfoEntity) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SpuInfoEntity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuInfoEntity) GetPublishStatus() int32 {
	if x != nil {
		return x.PublishStatus
	}
	return 0
}

func (x *SpuInfoEntity) GetSpuDescription() string {
	if x != nil {
		return x.SpuDescription
	}
	return ""
}

func (x *SpuInfoEntity) GetSpuName() string {
	if x != nil {
		return x.SpuName
	}
	return ""
}

func (x *SpuInfoEntity) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *SpuInfoEntity) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type SearchSpuInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount      int32            `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageSize        int32            `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPage       int32            `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	CurrPage        int32            `protobuf:"varint,4,opt,name=curr_page,json=currPage,proto3" json:"curr_page,omitempty"`
	SpuInfoEntities []*SpuInfoEntity `protobuf:"bytes,5,rep,name=spu_info_entities,json=spuInfoEntities,proto3" json:"spu_info_entities,omitempty"`
}

func (x *SearchSpuInfoResponse) Reset() {
	*x = SearchSpuInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpuInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpuInfoResponse) ProtoMessage() {}

func (x *SearchSpuInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpuInfoResponse.ProtoReflect.Descriptor instead.
func (*SearchSpuInfoResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{16}
}

func (x *SearchSpuInfoResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchSpuInfoResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSpuInfoResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *SearchSpuInfoResponse) GetCurrPage() int32 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *SearchSpuInfoResponse) GetSpuInfoEntities() []*SpuInfoEntity {
	if x != nil {
		return x.SpuInfoEntities
	}
	return nil
}

type CategoryEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId        int64             `protobuf:"varint,1,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`                      // 分类id
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // 分类名称
	ParentCid    int64             `protobuf:"varint,3,opt,name=parent_cid,json=parentCid,proto3" json:"parent_cid,omitempty"`          // 父分类id
	CatLevel     int32             `protobuf:"varint,4,opt,name=cat_level,json=catLevel,proto3" json:"cat_level,omitempty"`             // 层级
	ShowStatus   int32             `protobuf:"varint,5,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`       // 是否显示[0-不显示，1显示]
	Sort         int32             `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                                     // 排序
	Icon         string            `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                      // 图标地 g  P
	ProductUnit  string            `protobuf:"bytes,8,opt,name=product_unit,json=productUnit,proto3" json:"product_unit,omitempty"`     // 计量单位
	ProductCount int32             `protobuf:"varint,9,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"` // 商品数量
	Children     []*CategoryEntity `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *CategoryEntity) Reset() {
	*x = CategoryEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryEntity) ProtoMessage() {}

func (x *CategoryEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryEntity.ProtoReflect.Descriptor instead.
func (*CategoryEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{17}
}

func (x *CategoryEntity) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *CategoryEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryEntity) GetParentCid() int64 {
	if x != nil {
		return x.ParentCid
	}
	return 0
}

func (x *CategoryEntity) GetCatLevel() int32 {
	if x != nil {
		return x.CatLevel
	}
	return 0
}

func (x *CategoryEntity) GetShowStatus() int32 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *CategoryEntity) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CategoryEntity) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CategoryEntity) GetProductUnit() string {
	if x != nil {
		return x.ProductUnit
	}
	return ""
}

func (x *CategoryEntity) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *CategoryEntity) GetChildren() []*CategoryEntity {
	if x != nil {
		return x.Children
	}
	return nil
}

type ListCategoryTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCategoryTreeRequest) Reset() {
	*x = ListCategoryTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCategoryTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoryTreeRequest) ProtoMessage() {}

func (x *ListCategoryTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoryTreeRequest.ProtoReflect.Descriptor instead.
func (*ListCategoryTreeRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{18}
}

type ListCategoryTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryEntities []*CategoryEntity `protobuf:"bytes,1,rep,name=category_entities,json=categoryEntities,proto3" json:"category_entities,omitempty"`
}

func (x *ListCategoryTreeResponse) Reset() {
	*x = ListCategoryTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCategoryTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoryTreeResponse) ProtoMessage() {}

func (x *ListCategoryTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoryTreeResponse.ProtoReflect.Descriptor instead.
func (*ListCategoryTreeResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{19}
}

func (x *ListCategoryTreeResponse) GetCategoryEntities() []*CategoryEntity {
	if x != nil {
		return x.CategoryEntities
	}
	return nil
}

type DeleteCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatIds []int64 `protobuf:"varint,1,rep,packed,name=cat_ids,json=catIds,proto3" json:"cat_ids,omitempty"`
}

func (x *DeleteCategoryRequest) Reset() {
	*x = DeleteCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryRequest) ProtoMessage() {}

func (x *DeleteCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteCategoryRequest) GetCatIds() []int64 {
	if x != nil {
		return x.CatIds
	}
	return nil
}

type DeleteCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCategoryResponse) Reset() {
	*x = DeleteCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryResponse) ProtoMessage() {}

func (x *DeleteCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteCategoryResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{21}
}

type SaveCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // 分类名称
	ParentCid    int64  `protobuf:"varint,3,opt,name=parent_cid,json=parentCid,proto3" json:"parent_cid,omitempty"`          // 父分类id
	CatLevel     int32  `protobuf:"varint,4,opt,name=cat_level,json=catLevel,proto3" json:"cat_level,omitempty"`             // 层级
	ShowStatus   int32  `protobuf:"varint,5,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`       // 是否显示[0-不显示，1显示]
	Sort         int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                                     // 排序
	Icon         string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                      // 图标地 g  P
	ProductUnit  string `protobuf:"bytes,8,opt,name=product_unit,json=productUnit,proto3" json:"product_unit,omitempty"`     // 计量单位
	ProductCount int32  `protobuf:"varint,9,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"` // 商品数量
}

func (x *SaveCategoryRequest) Reset() {
	*x = SaveCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCategoryRequest) ProtoMessage() {}

func (x *SaveCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCategoryRequest.ProtoReflect.Descriptor instead.
func (*SaveCategoryRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{22}
}

func (x *SaveCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveCategoryRequest) GetParentCid() int64 {
	if x != nil {
		return x.ParentCid
	}
	return 0
}

func (x *SaveCategoryRequest) GetCatLevel() int32 {
	if x != nil {
		return x.CatLevel
	}
	return 0
}

func (x *SaveCategoryRequest) GetShowStatus() int32 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *SaveCategoryRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SaveCategoryRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SaveCategoryRequest) GetProductUnit() string {
	if x != nil {
		return x.ProductUnit
	}
	return ""
}

func (x *SaveCategoryRequest) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

type SaveCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveCategoryResponse) Reset() {
	*x = SaveCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveCategoryResponse) ProtoMessage() {}

func (x *SaveCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveCategoryResponse.ProtoReflect.Descriptor instead.
func (*SaveCategoryResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{23}
}

type UpdateCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId        int64  `protobuf:"varint,1,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`                      // 分类id
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // 分类名称
	ParentCid    int64  `protobuf:"varint,3,opt,name=parent_cid,json=parentCid,proto3" json:"parent_cid,omitempty"`          // 父分类id
	CatLevel     int32  `protobuf:"varint,4,opt,name=cat_level,json=catLevel,proto3" json:"cat_level,omitempty"`             // 层级
	ShowStatus   int32  `protobuf:"varint,5,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`       // 是否显示[0-不显示，1显示]
	Sort         int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                                     // 排序
	Icon         string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                      // 图标地 g  P
	ProductUnit  string `protobuf:"bytes,8,opt,name=product_unit,json=productUnit,proto3" json:"product_unit,omitempty"`     // 计量单位
	ProductCount int32  `protobuf:"varint,9,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"` // 商品数量
}

func (x *UpdateCategoryRequest) Reset() {
	*x = UpdateCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryRequest) ProtoMessage() {}

func (x *UpdateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateCategoryRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *UpdateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCategoryRequest) GetParentCid() int64 {
	if x != nil {
		return x.ParentCid
	}
	return 0
}

func (x *UpdateCategoryRequest) GetCatLevel() int32 {
	if x != nil {
		return x.CatLevel
	}
	return 0
}

func (x *UpdateCategoryRequest) GetShowStatus() int32 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *UpdateCategoryRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateCategoryRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateCategoryRequest) GetProductUnit() string {
	if x != nil {
		return x.ProductUnit
	}
	return ""
}

func (x *UpdateCategoryRequest) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

type UpdateCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCategoryResponse) Reset() {
	*x = UpdateCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryResponse) ProtoMessage() {}

func (x *UpdateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{25}
}

type SaveBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandEntity *BrandEntity `protobuf:"bytes,1,opt,name=brand_entity,json=brandEntity,proto3" json:"brand_entity,omitempty"`
}

func (x *SaveBrandRequest) Reset() {
	*x = SaveBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBrandRequest) ProtoMessage() {}

func (x *SaveBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBrandRequest.ProtoReflect.Descriptor instead.
func (*SaveBrandRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{26}
}

func (x *SaveBrandRequest) GetBrandEntity() *BrandEntity {
	if x != nil {
		return x.BrandEntity
	}
	return nil
}

type SaveBrandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveBrandResponse) Reset() {
	*x = SaveBrandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBrandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBrandResponse) ProtoMessage() {}

func (x *SaveBrandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBrandResponse.ProtoReflect.Descriptor instead.
func (*SaveBrandResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{27}
}

type DeleteBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandIds []int64 `protobuf:"varint,1,rep,packed,name=brand_ids,json=brandIds,proto3" json:"brand_ids,omitempty"`
}

func (x *DeleteBrandRequest) Reset() {
	*x = DeleteBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandRequest) ProtoMessage() {}

func (x *DeleteBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandRequest.ProtoReflect.Descriptor instead.
func (*DeleteBrandRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteBrandRequest) GetBrandIds() []int64 {
	if x != nil {
		return x.BrandIds
	}
	return nil
}

type DeleteBrandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBrandResponse) Reset() {
	*x = DeleteBrandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBrandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandResponse) ProtoMessage() {}

func (x *DeleteBrandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandResponse.ProtoReflect.Descriptor instead.
func (*DeleteBrandResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{29}
}

type UpdateBrandStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId    int64 `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	ShowStatus int32 `protobuf:"varint,2,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`
}

func (x *UpdateBrandStatusRequest) Reset() {
	*x = UpdateBrandStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBrandStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandStatusRequest) ProtoMessage() {}

func (x *UpdateBrandStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateBrandStatusRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateBrandStatusRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *UpdateBrandStatusRequest) GetShowStatus() int32 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

type UpdateBrandStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBrandStatusResponse) Reset() {
	*x = UpdateBrandStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBrandStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandStatusResponse) ProtoMessage() {}

func (x *UpdateBrandStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateBrandStatusResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{31}
}

type GetCategoryInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId int64 `protobuf:"varint,1,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
}

func (x *GetCategoryInfoRequest) Reset() {
	*x = GetCategoryInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryInfoRequest) ProtoMessage() {}

func (x *GetCategoryInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryInfoRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{32}
}

func (x *GetCategoryInfoRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

type GetCategoryInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId        int64  `protobuf:"varint,1,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`                      // 分类id
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                      // 分类名称
	ParentCid    int64  `protobuf:"varint,3,opt,name=parent_cid,json=parentCid,proto3" json:"parent_cid,omitempty"`          // 父分类id
	CatLevel     int32  `protobuf:"varint,4,opt,name=cat_level,json=catLevel,proto3" json:"cat_level,omitempty"`             // 层级
	ShowStatus   int32  `protobuf:"varint,5,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`       // 是否显示[0-不显示，1显示]
	Sort         int32  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                                     // 排序
	Icon         string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                      // 图标地 g  P
	ProductUnit  string `protobuf:"bytes,8,opt,name=product_unit,json=productUnit,proto3" json:"product_unit,omitempty"`     // 计量单位
	ProductCount int32  `protobuf:"varint,9,opt,name=product_count,json=productCount,proto3" json:"product_count,omitempty"` // 商品数量
}

func (x *GetCategoryInfoResponse) Reset() {
	*x = GetCategoryInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCategoryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryInfoResponse) ProtoMessage() {}

func (x *GetCategoryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryInfoResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryInfoResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{33}
}

func (x *GetCategoryInfoResponse) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *GetCategoryInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCategoryInfoResponse) GetParentCid() int64 {
	if x != nil {
		return x.ParentCid
	}
	return 0
}

func (x *GetCategoryInfoResponse) GetCatLevel() int32 {
	if x != nil {
		return x.CatLevel
	}
	return 0
}

func (x *GetCategoryInfoResponse) GetShowStatus() int32 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *GetCategoryInfoResponse) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GetCategoryInfoResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetCategoryInfoResponse) GetProductUnit() string {
	if x != nil {
		return x.ProductUnit
	}
	return ""
}

func (x *GetCategoryInfoResponse) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

type GetBrandListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`    // 当前页码
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` //每页记录数
	Keyword  string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                    //检索关键字
	Order    string `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`                        //排序方式
	Sidx     string `protobuf:"bytes,5,opt,name=sidx,proto3" json:"sidx,omitempty"`                          // 排序字段
}

func (x *GetBrandListRequest) Reset() {
	*x = GetBrandListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandListRequest) ProtoMessage() {}

func (x *GetBrandListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandListRequest.ProtoReflect.Descriptor instead.
func (*GetBrandListRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{34}
}

func (x *GetBrandListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetBrandListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetBrandListRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetBrandListRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *GetBrandListRequest) GetSidx() string {
	if x != nil {
		return x.Sidx
	}
	return ""
}

type BrandEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId     int64  `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`            // 品牌id
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                  // 品牌名
	Logo        string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`                                  // 品牌logo地址
	Descript    string `protobuf:"bytes,4,opt,name=descript,proto3" json:"descript,omitempty"`                          // 介绍
	ShowStatus  int32  `protobuf:"varint,5,opt,name=show_status,json=showStatus,proto3" json:"show_status,omitempty"`   // 显示状态[0-不显示；1-显示]
	FirstLetter string `protobuf:"bytes,6,opt,name=first_letter,json=firstLetter,proto3" json:"first_letter,omitempty"` // 检索首字母
	Sort        int32  `protobuf:"varint,7,opt,name=sort,proto3" json:"sort,omitempty"`                                 // 排序
}

func (x *BrandEntity) Reset() {
	*x = BrandEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandEntity) ProtoMessage() {}

func (x *BrandEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandEntity.ProtoReflect.Descriptor instead.
func (*BrandEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{35}
}

func (x *BrandEntity) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *BrandEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandEntity) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BrandEntity) GetDescript() string {
	if x != nil {
		return x.Descript
	}
	return ""
}

func (x *BrandEntity) GetShowStatus() int32 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *BrandEntity) GetFirstLetter() string {
	if x != nil {
		return x.FirstLetter
	}
	return ""
}

func (x *BrandEntity) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type GetBrandListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandEntities []*BrandEntity `protobuf:"bytes,1,rep,name=brand_entities,json=brandEntities,proto3" json:"brand_entities,omitempty"`
}

func (x *GetBrandListResponse) Reset() {
	*x = GetBrandListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandListResponse) ProtoMessage() {}

func (x *GetBrandListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandListResponse.ProtoReflect.Descriptor instead.
func (*GetBrandListResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{36}
}

func (x *GetBrandListResponse) GetBrandEntities() []*BrandEntity {
	if x != nil {
		return x.BrandEntities
	}
	return nil
}

type GetBrandInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId int64 `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
}

func (x *GetBrandInfoRequest) Reset() {
	*x = GetBrandInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandInfoRequest) ProtoMessage() {}

func (x *GetBrandInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBrandInfoRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{37}
}

func (x *GetBrandInfoRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

type GetBrandInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandEntity *BrandEntity `protobuf:"bytes,1,opt,name=brand_entity,json=brandEntity,proto3" json:"brand_entity,omitempty"`
}

func (x *GetBrandInfoResponse) Reset() {
	*x = GetBrandInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandInfoResponse) ProtoMessage() {}

func (x *GetBrandInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandInfoResponse.ProtoReflect.Descriptor instead.
func (*GetBrandInfoResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{38}
}

func (x *GetBrandInfoResponse) GetBrandEntity() *BrandEntity {
	if x != nil {
		return x.BrandEntity
	}
	return nil
}

type UpdateBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandEntity *BrandEntity `protobuf:"bytes,1,opt,name=brand_entity,json=brandEntity,proto3" json:"brand_entity,omitempty"`
}

func (x *UpdateBrandRequest) Reset() {
	*x = UpdateBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandRequest) ProtoMessage() {}

func (x *UpdateBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandRequest.ProtoReflect.Descriptor instead.
func (*UpdateBrandRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateBrandRequest) GetBrandEntity() *BrandEntity {
	if x != nil {
		return x.BrandEntity
	}
	return nil
}

type UpdateBrandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBrandResponse) Reset() {
	*x = UpdateBrandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBrandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBrandResponse) ProtoMessage() {}

func (x *UpdateBrandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBrandResponse.ProtoReflect.Descriptor instead.
func (*UpdateBrandResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{40}
}

type GetBrandRelatedCateLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId int64 `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
}

func (x *GetBrandRelatedCateLogRequest) Reset() {
	*x = GetBrandRelatedCateLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandRelatedCateLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandRelatedCateLogRequest) ProtoMessage() {}

func (x *GetBrandRelatedCateLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandRelatedCateLogRequest.ProtoReflect.Descriptor instead.
func (*GetBrandRelatedCateLogRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{41}
}

func (x *GetBrandRelatedCateLogRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

type BrandRelatedCateLogEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CatelogId  int64  `protobuf:"varint,2,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	CatlogName string `protobuf:"bytes,3,opt,name=catlog_name,json=catlogName,proto3" json:"catlog_name,omitempty"`
	BrandId    int64  `protobuf:"varint,4,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	BrandName  string `protobuf:"bytes,5,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
}

func (x *BrandRelatedCateLogEntity) Reset() {
	*x = BrandRelatedCateLogEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandRelatedCateLogEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandRelatedCateLogEntity) ProtoMessage() {}

func (x *BrandRelatedCateLogEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandRelatedCateLogEntity.ProtoReflect.Descriptor instead.
func (*BrandRelatedCateLogEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{42}
}

func (x *BrandRelatedCateLogEntity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandRelatedCateLogEntity) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *BrandRelatedCateLogEntity) GetCatlogName() string {
	if x != nil {
		return x.CatlogName
	}
	return ""
}

func (x *BrandRelatedCateLogEntity) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *BrandRelatedCateLogEntity) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

type GetBrandRelatedCateLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandRelatedCateLogEntities []*BrandRelatedCateLogEntity `protobuf:"bytes,1,rep,name=brand_related_cate_log_entities,json=brandRelatedCateLogEntities,proto3" json:"brand_related_cate_log_entities,omitempty"`
}

func (x *GetBrandRelatedCateLogResponse) Reset() {
	*x = GetBrandRelatedCateLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBrandRelatedCateLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBrandRelatedCateLogResponse) ProtoMessage() {}

func (x *GetBrandRelatedCateLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBrandRelatedCateLogResponse.ProtoReflect.Descriptor instead.
func (*GetBrandRelatedCateLogResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{43}
}

func (x *GetBrandRelatedCateLogResponse) GetBrandRelatedCateLogEntities() []*BrandRelatedCateLogEntity {
	if x != nil {
		return x.BrandRelatedCateLogEntities
	}
	return nil
}

type SaveBrandCatelogRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId   int64 `protobuf:"varint,1,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	CatelogId int64 `protobuf:"varint,2,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
}

func (x *SaveBrandCatelogRelationRequest) Reset() {
	*x = SaveBrandCatelogRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBrandCatelogRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBrandCatelogRelationRequest) ProtoMessage() {}

func (x *SaveBrandCatelogRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBrandCatelogRelationRequest.ProtoReflect.Descriptor instead.
func (*SaveBrandCatelogRelationRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{44}
}

func (x *SaveBrandCatelogRelationRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SaveBrandCatelogRelationRequest) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

type SaveBrandCatelogRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveBrandCatelogRelationResponse) Reset() {
	*x = SaveBrandCatelogRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveBrandCatelogRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveBrandCatelogRelationResponse) ProtoMessage() {}

func (x *SaveBrandCatelogRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveBrandCatelogRelationResponse.ProtoReflect.Descriptor instead.
func (*SaveBrandCatelogRelationResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{45}
}

type DeleteBrandCatelogRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteBrandCatelogRelationRequest) Reset() {
	*x = DeleteBrandCatelogRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBrandCatelogRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandCatelogRelationRequest) ProtoMessage() {}

func (x *DeleteBrandCatelogRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandCatelogRelationRequest.ProtoReflect.Descriptor instead.
func (*DeleteBrandCatelogRelationRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteBrandCatelogRelationRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteBrandCatelogRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBrandCatelogRelationResponse) Reset() {
	*x = DeleteBrandCatelogRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBrandCatelogRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBrandCatelogRelationResponse) ProtoMessage() {}

func (x *DeleteBrandCatelogRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBrandCatelogRelationResponse.ProtoReflect.Descriptor instead.
func (*DeleteBrandCatelogRelationResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{47}
}

type ListCatelogAttrGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatelogId int64  `protobuf:"varint,1,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	PageNum   int32  `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize  int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Key       string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ListCatelogAttrGroupRequest) Reset() {
	*x = ListCatelogAttrGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatelogAttrGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatelogAttrGroupRequest) ProtoMessage() {}

func (x *ListCatelogAttrGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatelogAttrGroupRequest.ProtoReflect.Descriptor instead.
func (*ListCatelogAttrGroupRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{48}
}

func (x *ListCatelogAttrGroupRequest) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *ListCatelogAttrGroupRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListCatelogAttrGroupRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCatelogAttrGroupRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CatelogAttrGroupEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId   int64   `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
	AttrGroupName string  `protobuf:"bytes,2,opt,name=attr_group_name,json=attrGroupName,proto3" json:"attr_group_name,omitempty"`
	CatelogId     int64   `protobuf:"varint,3,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	Descript      string  `protobuf:"bytes,4,opt,name=descript,proto3" json:"descript,omitempty"`
	Icon          string  `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Sort          int32   `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	CatelogPath   []int64 `protobuf:"varint,7,rep,packed,name=catelog_path,json=catelogPath,proto3" json:"catelog_path,omitempty"`
}

func (x *CatelogAttrGroupEntity) Reset() {
	*x = CatelogAttrGroupEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatelogAttrGroupEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatelogAttrGroupEntity) ProtoMessage() {}

func (x *CatelogAttrGroupEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatelogAttrGroupEntity.ProtoReflect.Descriptor instead.
func (*CatelogAttrGroupEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{49}
}

func (x *CatelogAttrGroupEntity) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *CatelogAttrGroupEntity) GetAttrGroupName() string {
	if x != nil {
		return x.AttrGroupName
	}
	return ""
}

func (x *CatelogAttrGroupEntity) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *CatelogAttrGroupEntity) GetDescript() string {
	if x != nil {
		return x.Descript
	}
	return ""
}

func (x *CatelogAttrGroupEntity) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CatelogAttrGroupEntity) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CatelogAttrGroupEntity) GetCatelogPath() []int64 {
	if x != nil {
		return x.CatelogPath
	}
	return nil
}

type ListCatelogAttrGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount               int32                     `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageSize                 int32                     `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPage                int32                     `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	CurrPage                 int32                     `protobuf:"varint,4,opt,name=curr_page,json=currPage,proto3" json:"curr_page,omitempty"`
	CatelogAttrGroupEntities []*CatelogAttrGroupEntity `protobuf:"bytes,5,rep,name=catelog_attr_group_entities,json=catelogAttrGroupEntities,proto3" json:"catelog_attr_group_entities,omitempty"`
}

func (x *ListCatelogAttrGroupResponse) Reset() {
	*x = ListCatelogAttrGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatelogAttrGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatelogAttrGroupResponse) ProtoMessage() {}

func (x *ListCatelogAttrGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatelogAttrGroupResponse.ProtoReflect.Descriptor instead.
func (*ListCatelogAttrGroupResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{50}
}

func (x *ListCatelogAttrGroupResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListCatelogAttrGroupResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCatelogAttrGroupResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *ListCatelogAttrGroupResponse) GetCurrPage() int32 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *ListCatelogAttrGroupResponse) GetCatelogAttrGroupEntities() []*CatelogAttrGroupEntity {
	if x != nil {
		return x.CatelogAttrGroupEntities
	}
	return nil
}

type GetAttrGroupInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId int64 `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
}

func (x *GetAttrGroupInfoRequest) Reset() {
	*x = GetAttrGroupInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrGroupInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrGroupInfoRequest) ProtoMessage() {}

func (x *GetAttrGroupInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrGroupInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAttrGroupInfoRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{51}
}

func (x *GetAttrGroupInfoRequest) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

type GetAttrGroupInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatelogAttrGroupEntity *CatelogAttrGroupEntity `protobuf:"bytes,1,opt,name=catelog_attr_group_entity,json=catelogAttrGroupEntity,proto3" json:"catelog_attr_group_entity,omitempty"`
}

func (x *GetAttrGroupInfoResponse) Reset() {
	*x = GetAttrGroupInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrGroupInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrGroupInfoResponse) ProtoMessage() {}

func (x *GetAttrGroupInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrGroupInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAttrGroupInfoResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{52}
}

func (x *GetAttrGroupInfoResponse) GetCatelogAttrGroupEntity() *CatelogAttrGroupEntity {
	if x != nil {
		return x.CatelogAttrGroupEntity
	}
	return nil
}

type GetAttrListRelatedWithCatelogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatelogId int64  `protobuf:"varint,1,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	Page      int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`   //当前页码
	Limit     int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"` //每页记录数
	Sidx      string `protobuf:"bytes,4,opt,name=sidx,proto3" json:"sidx,omitempty"`    //排序字段
	Order     string `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`  //排序方式
	Key       string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`      //检索关键字
}

func (x *GetAttrListRelatedWithCatelogRequest) Reset() {
	*x = GetAttrListRelatedWithCatelogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrListRelatedWithCatelogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrListRelatedWithCatelogRequest) ProtoMessage() {}

func (x *GetAttrListRelatedWithCatelogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrListRelatedWithCatelogRequest.ProtoReflect.Descriptor instead.
func (*GetAttrListRelatedWithCatelogRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{53}
}

func (x *GetAttrListRelatedWithCatelogRequest) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *GetAttrListRelatedWithCatelogRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAttrListRelatedWithCatelogRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAttrListRelatedWithCatelogRequest) GetSidx() string {
	if x != nil {
		return x.Sidx
	}
	return ""
}

func (x *GetAttrListRelatedWithCatelogRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *GetAttrListRelatedWithCatelogRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AttrEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId      int64  `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`                //属性id
	AttrName    string `protobuf:"bytes,2,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`           //属性名
	AttrType    int32  `protobuf:"varint,3,opt,name=attr_type,json=attrType,proto3" json:"attr_type,omitempty"`          //属性类型，0-销售属性，1-基本属性
	CatelogName string `protobuf:"bytes,4,opt,name=catelog_name,json=catelogName,proto3" json:"catelog_name,omitempty"`  //所属分类名字
	GroupName   string `protobuf:"bytes,5,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`        //所属分组名字
	Enable      int32  `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`                              //是否启用
	Icon        string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                   //图标
	SearchType  int32  `protobuf:"varint,8,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`    //是否需要检索[0-不需要，1-需要]
	ShowDesc    int32  `protobuf:"varint,9,opt,name=show_desc,json=showDesc,proto3" json:"show_desc,omitempty"`          //是否展示在介绍上；0-否 1-是
	ValueSelect string `protobuf:"bytes,10,opt,name=value_select,json=valueSelect,proto3" json:"value_select,omitempty"` //可选值列表[用逗号分隔]
	ValueType   int32  `protobuf:"varint,11,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`      //值类型[0-为单个值，1-可以选择多个值]
}

func (x *AttrEntity) Reset() {
	*x = AttrEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrEntity) ProtoMessage() {}

func (x *AttrEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrEntity.ProtoReflect.Descriptor instead.
func (*AttrEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{54}
}

func (x *AttrEntity) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *AttrEntity) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *AttrEntity) GetAttrType() int32 {
	if x != nil {
		return x.AttrType
	}
	return 0
}

func (x *AttrEntity) GetCatelogName() string {
	if x != nil {
		return x.CatelogName
	}
	return ""
}

func (x *AttrEntity) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AttrEntity) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *AttrEntity) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AttrEntity) GetSearchType() int32 {
	if x != nil {
		return x.SearchType
	}
	return 0
}

func (x *AttrEntity) GetShowDesc() int32 {
	if x != nil {
		return x.ShowDesc
	}
	return 0
}

func (x *AttrEntity) GetValueSelect() string {
	if x != nil {
		return x.ValueSelect
	}
	return ""
}

func (x *AttrEntity) GetValueType() int32 {
	if x != nil {
		return x.ValueType
	}
	return 0
}

type GetAttrListRelatedWithCatelogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   int32         `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageSize     int32         `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPage    int32         `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	CurrPage     int32         `protobuf:"varint,4,opt,name=curr_page,json=currPage,proto3" json:"curr_page,omitempty"`
	AttrEntities []*AttrEntity `protobuf:"bytes,5,rep,name=attr_entities,json=attrEntities,proto3" json:"attr_entities,omitempty"`
}

func (x *GetAttrListRelatedWithCatelogResponse) Reset() {
	*x = GetAttrListRelatedWithCatelogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrListRelatedWithCatelogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrListRelatedWithCatelogResponse) ProtoMessage() {}

func (x *GetAttrListRelatedWithCatelogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrListRelatedWithCatelogResponse.ProtoReflect.Descriptor instead.
func (*GetAttrListRelatedWithCatelogResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{55}
}

func (x *GetAttrListRelatedWithCatelogResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetAttrListRelatedWithCatelogResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetAttrListRelatedWithCatelogResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *GetAttrListRelatedWithCatelogResponse) GetCurrPage() int32 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *GetAttrListRelatedWithCatelogResponse) GetAttrEntities() []*AttrEntity {
	if x != nil {
		return x.AttrEntities
	}
	return nil
}

type SaveProductAttrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId int64  `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"` //属性分组id
	AttrName    string `protobuf:"bytes,2,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`             //属性名
	AttrType    int32  `protobuf:"varint,3,opt,name=attr_type,json=attrType,proto3" json:"attr_type,omitempty"`            //属性类型
	CatelogId   int64  `protobuf:"varint,4,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`         //分类id
	Enable      int32  `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`                                //是否可用
	Icon        string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`                                     //图标
	SearchType  int32  `protobuf:"varint,7,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`      //是否检索
	ShowDesc    int32  `protobuf:"varint,8,opt,name=show_desc,json=showDesc,proto3" json:"show_desc,omitempty"`            //快速展示
	ValueSelect string `protobuf:"bytes,9,opt,name=value_select,json=valueSelect,proto3" json:"value_select,omitempty"`    //可选值列表
	ValueType   int32  `protobuf:"varint,10,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`        //可选值模式
}

func (x *SaveProductAttrRequest) Reset() {
	*x = SaveProductAttrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductAttrRequest) ProtoMessage() {}

func (x *SaveProductAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductAttrRequest.ProtoReflect.Descriptor instead.
func (*SaveProductAttrRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{56}
}

func (x *SaveProductAttrRequest) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *SaveProductAttrRequest) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SaveProductAttrRequest) GetAttrType() int32 {
	if x != nil {
		return x.AttrType
	}
	return 0
}

func (x *SaveProductAttrRequest) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *SaveProductAttrRequest) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *SaveProductAttrRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SaveProductAttrRequest) GetSearchType() int32 {
	if x != nil {
		return x.SearchType
	}
	return 0
}

func (x *SaveProductAttrRequest) GetShowDesc() int32 {
	if x != nil {
		return x.ShowDesc
	}
	return 0
}

func (x *SaveProductAttrRequest) GetValueSelect() string {
	if x != nil {
		return x.ValueSelect
	}
	return ""
}

func (x *SaveProductAttrRequest) GetValueType() int32 {
	if x != nil {
		return x.ValueType
	}
	return 0
}

type SaveProductAttrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveProductAttrResponse) Reset() {
	*x = SaveProductAttrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductAttrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductAttrResponse) ProtoMessage() {}

func (x *SaveProductAttrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductAttrResponse.ProtoReflect.Descriptor instead.
func (*SaveProductAttrResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{57}
}

type GetAttrInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId int64 `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`
}

func (x *GetAttrInfoRequest) Reset() {
	*x = GetAttrInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrInfoRequest) ProtoMessage() {}

func (x *GetAttrInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAttrInfoRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{58}
}

func (x *GetAttrInfoRequest) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

type GetAttrInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId      int64   `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`                //属性id
	AttrName    string  `protobuf:"bytes,2,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`           //属性名
	AttrType    int32   `protobuf:"varint,3,opt,name=attr_type,json=attrType,proto3" json:"attr_type,omitempty"`          //属性类型，0-销售属性，1-基本属性
	Enable      int32   `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`                              //是否启用
	Icon        string  `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                   //图标
	SearchType  int32   `protobuf:"varint,8,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`    //是否需要检索[0-不需要，1-需要]
	ShowDesc    int32   `protobuf:"varint,9,opt,name=show_desc,json=showDesc,proto3" json:"show_desc,omitempty"`          //是否展示在介绍上；0-否 1-是
	ValueSelect string  `protobuf:"bytes,10,opt,name=value_select,json=valueSelect,proto3" json:"value_select,omitempty"` //可选值列表[用逗号分隔]
	ValueType   int32   `protobuf:"varint,11,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`      //值类型[0-为单个值，1-可以选择多个值]
	CatelogId   int64   `protobuf:"varint,12,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`
	AttrGroupId int32   `protobuf:"varint,13,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
	CatelogPath []int64 `protobuf:"varint,14,rep,packed,name=catelog_path,json=catelogPath,proto3" json:"catelog_path,omitempty"`
}

func (x *GetAttrInfoResponse) Reset() {
	*x = GetAttrInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrInfoResponse) ProtoMessage() {}

func (x *GetAttrInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAttrInfoResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{59}
}

func (x *GetAttrInfoResponse) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *GetAttrInfoResponse) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *GetAttrInfoResponse) GetAttrType() int32 {
	if x != nil {
		return x.AttrType
	}
	return 0
}

func (x *GetAttrInfoResponse) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *GetAttrInfoResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetAttrInfoResponse) GetSearchType() int32 {
	if x != nil {
		return x.SearchType
	}
	return 0
}

func (x *GetAttrInfoResponse) GetShowDesc() int32 {
	if x != nil {
		return x.ShowDesc
	}
	return 0
}

func (x *GetAttrInfoResponse) GetValueSelect() string {
	if x != nil {
		return x.ValueSelect
	}
	return ""
}

func (x *GetAttrInfoResponse) GetValueType() int32 {
	if x != nil {
		return x.ValueType
	}
	return 0
}

func (x *GetAttrInfoResponse) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *GetAttrInfoResponse) GetAttrGroupId() int32 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *GetAttrInfoResponse) GetCatelogPath() []int64 {
	if x != nil {
		return x.CatelogPath
	}
	return nil
}

type UpdateAttrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId      int64  `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`                //属性id
	AttrName    string `protobuf:"bytes,2,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`           //属性名
	AttrType    int32  `protobuf:"varint,3,opt,name=attr_type,json=attrType,proto3" json:"attr_type,omitempty"`          //属性类型，0-销售属性，1-基本属性
	CatelogId   int64  `protobuf:"varint,4,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`       //所属分类名字
	Enable      int32  `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`                              //是否启用
	Icon        string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                   //图标
	SearchType  int32  `protobuf:"varint,8,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`    //是否需要检索[0-不需要，1-需要]
	ShowDesc    int32  `protobuf:"varint,9,opt,name=show_desc,json=showDesc,proto3" json:"show_desc,omitempty"`          //是否展示在介绍上；0-否 1-是
	ValueSelect string `protobuf:"bytes,10,opt,name=value_select,json=valueSelect,proto3" json:"value_select,omitempty"` //可选值列表[用逗号分隔]
	ValueType   int32  `protobuf:"varint,11,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`      //值类型[0-为单个值，1-可以选择多个值]
}

func (x *UpdateAttrRequest) Reset() {
	*x = UpdateAttrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttrRequest) ProtoMessage() {}

func (x *UpdateAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttrRequest.ProtoReflect.Descriptor instead.
func (*UpdateAttrRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateAttrRequest) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *UpdateAttrRequest) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *UpdateAttrRequest) GetAttrType() int32 {
	if x != nil {
		return x.AttrType
	}
	return 0
}

func (x *UpdateAttrRequest) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *UpdateAttrRequest) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *UpdateAttrRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateAttrRequest) GetSearchType() int32 {
	if x != nil {
		return x.SearchType
	}
	return 0
}

func (x *UpdateAttrRequest) GetShowDesc() int32 {
	if x != nil {
		return x.ShowDesc
	}
	return 0
}

func (x *UpdateAttrRequest) GetValueSelect() string {
	if x != nil {
		return x.ValueSelect
	}
	return ""
}

func (x *UpdateAttrRequest) GetValueType() int32 {
	if x != nil {
		return x.ValueType
	}
	return 0
}

type UpdateAttrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAttrResponse) Reset() {
	*x = UpdateAttrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttrResponse) ProtoMessage() {}

func (x *UpdateAttrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttrResponse.ProtoReflect.Descriptor instead.
func (*UpdateAttrResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{61}
}

type GetSaleAttrRelatedCatelogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSaleAttrRelatedCatelogRequest) Reset() {
	*x = GetSaleAttrRelatedCatelogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSaleAttrRelatedCatelogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSaleAttrRelatedCatelogRequest) ProtoMessage() {}

func (x *GetSaleAttrRelatedCatelogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSaleAttrRelatedCatelogRequest.ProtoReflect.Descriptor instead.
func (*GetSaleAttrRelatedCatelogRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{62}
}

type GetSaleAttrRelatedCatelogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrEntities []*AttrEntity `protobuf:"bytes,1,rep,name=attr_entities,json=attrEntities,proto3" json:"attr_entities,omitempty"`
}

func (x *GetSaleAttrRelatedCatelogResponse) Reset() {
	*x = GetSaleAttrRelatedCatelogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSaleAttrRelatedCatelogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSaleAttrRelatedCatelogResponse) ProtoMessage() {}

func (x *GetSaleAttrRelatedCatelogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSaleAttrRelatedCatelogResponse.ProtoReflect.Descriptor instead.
func (*GetSaleAttrRelatedCatelogResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{63}
}

func (x *GetSaleAttrRelatedCatelogResponse) GetAttrEntities() []*AttrEntity {
	if x != nil {
		return x.AttrEntities
	}
	return nil
}

type GetAttrRelatedAttrGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId int64 `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
}

func (x *GetAttrRelatedAttrGroupRequest) Reset() {
	*x = GetAttrRelatedAttrGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrRelatedAttrGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrRelatedAttrGroupRequest) ProtoMessage() {}

func (x *GetAttrRelatedAttrGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrRelatedAttrGroupRequest.ProtoReflect.Descriptor instead.
func (*GetAttrRelatedAttrGroupRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{64}
}

func (x *GetAttrRelatedAttrGroupRequest) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

type GetAttrRelatedAttrGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmsAttrEntities []*PmsAttrEntity `protobuf:"bytes,1,rep,name=pms_attr_entities,json=pmsAttrEntities,proto3" json:"pms_attr_entities,omitempty"`
}

func (x *GetAttrRelatedAttrGroupResponse) Reset() {
	*x = GetAttrRelatedAttrGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrRelatedAttrGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrRelatedAttrGroupResponse) ProtoMessage() {}

func (x *GetAttrRelatedAttrGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrRelatedAttrGroupResponse.ProtoReflect.Descriptor instead.
func (*GetAttrRelatedAttrGroupResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{65}
}

func (x *GetAttrRelatedAttrGroupResponse) GetPmsAttrEntities() []*PmsAttrEntity {
	if x != nil {
		return x.PmsAttrEntities
	}
	return nil
}

type SaveAttrAttrGroupRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrAttrGroupRelationEntities []*AttrAttrGroupRelationEntity `protobuf:"bytes,1,rep,name=attr_attr_group_relation_entities,json=attrAttrGroupRelationEntities,proto3" json:"attr_attr_group_relation_entities,omitempty"`
}

func (x *SaveAttrAttrGroupRelationRequest) Reset() {
	*x = SaveAttrAttrGroupRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAttrAttrGroupRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAttrAttrGroupRelationRequest) ProtoMessage() {}

func (x *SaveAttrAttrGroupRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAttrAttrGroupRelationRequest.ProtoReflect.Descriptor instead.
func (*SaveAttrAttrGroupRelationRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{66}
}

func (x *SaveAttrAttrGroupRelationRequest) GetAttrAttrGroupRelationEntities() []*AttrAttrGroupRelationEntity {
	if x != nil {
		return x.AttrAttrGroupRelationEntities
	}
	return nil
}

type SaveAttrAttrGroupRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveAttrAttrGroupRelationResponse) Reset() {
	*x = SaveAttrAttrGroupRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAttrAttrGroupRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAttrAttrGroupRelationResponse) ProtoMessage() {}

func (x *SaveAttrAttrGroupRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAttrAttrGroupRelationResponse.ProtoReflect.Descriptor instead.
func (*SaveAttrAttrGroupRelationResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{67}
}

type AttrAttrGroupRelationEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId int64 `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
	AttrId      int64 `protobuf:"varint,2,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`
}

func (x *AttrAttrGroupRelationEntity) Reset() {
	*x = AttrAttrGroupRelationEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrAttrGroupRelationEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrAttrGroupRelationEntity) ProtoMessage() {}

func (x *AttrAttrGroupRelationEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrAttrGroupRelationEntity.ProtoReflect.Descriptor instead.
func (*AttrAttrGroupRelationEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{68}
}

func (x *AttrAttrGroupRelationEntity) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *AttrAttrGroupRelationEntity) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

type DeleteAttrAttrGroupRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrAttrGroupRelationEntities []*AttrAttrGroupRelationEntity `protobuf:"bytes,1,rep,name=attr_attr_group_relation_entities,json=attrAttrGroupRelationEntities,proto3" json:"attr_attr_group_relation_entities,omitempty"`
}

func (x *DeleteAttrAttrGroupRelationRequest) Reset() {
	*x = DeleteAttrAttrGroupRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttrAttrGroupRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttrAttrGroupRelationRequest) ProtoMessage() {}

func (x *DeleteAttrAttrGroupRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttrAttrGroupRelationRequest.ProtoReflect.Descriptor instead.
func (*DeleteAttrAttrGroupRelationRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{69}
}

func (x *DeleteAttrAttrGroupRelationRequest) GetAttrAttrGroupRelationEntities() []*AttrAttrGroupRelationEntity {
	if x != nil {
		return x.AttrAttrGroupRelationEntities
	}
	return nil
}

type DeleteAttrAttrGroupRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAttrAttrGroupRelationResponse) Reset() {
	*x = DeleteAttrAttrGroupRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAttrAttrGroupRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAttrAttrGroupRelationResponse) ProtoMessage() {}

func (x *DeleteAttrAttrGroupRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAttrAttrGroupRelationResponse.ProtoReflect.Descriptor instead.
func (*DeleteAttrAttrGroupRelationResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{70}
}

type PmsAttrEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId      int64  `protobuf:"varint,1,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`                //属性id
	AttrName    string `protobuf:"bytes,2,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`           //属性名
	AttrType    int32  `protobuf:"varint,3,opt,name=attr_type,json=attrType,proto3" json:"attr_type,omitempty"`          //属性类型，0-销售属性，1-基本属性
	CatelogId   int64  `protobuf:"varint,4,opt,name=catelog_id,json=catelogId,proto3" json:"catelog_id,omitempty"`       //所属分类名字
	Enable      int32  `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`                              //是否启用
	Icon        string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                                   //图标
	SearchType  int32  `protobuf:"varint,8,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`    //是否需要检索[0-不需要，1-需要]
	ShowDesc    int32  `protobuf:"varint,9,opt,name=show_desc,json=showDesc,proto3" json:"show_desc,omitempty"`          //是否展示在介绍上；0-否 1-是
	ValueSelect string `protobuf:"bytes,10,opt,name=value_select,json=valueSelect,proto3" json:"value_select,omitempty"` //可选值列表[用逗号分隔]
	ValueType   int32  `protobuf:"varint,11,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`      //值类型[0-为单个值，1-可以选择多个值]
}

func (x *PmsAttrEntity) Reset() {
	*x = PmsAttrEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PmsAttrEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PmsAttrEntity) ProtoMessage() {}

func (x *PmsAttrEntity) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PmsAttrEntity.ProtoReflect.Descriptor instead.
func (*PmsAttrEntity) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{71}
}

func (x *PmsAttrEntity) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *PmsAttrEntity) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *PmsAttrEntity) GetAttrType() int32 {
	if x != nil {
		return x.AttrType
	}
	return 0
}

func (x *PmsAttrEntity) GetCatelogId() int64 {
	if x != nil {
		return x.CatelogId
	}
	return 0
}

func (x *PmsAttrEntity) GetEnable() int32 {
	if x != nil {
		return x.Enable
	}
	return 0
}

func (x *PmsAttrEntity) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PmsAttrEntity) GetSearchType() int32 {
	if x != nil {
		return x.SearchType
	}
	return 0
}

func (x *PmsAttrEntity) GetShowDesc() int32 {
	if x != nil {
		return x.ShowDesc
	}
	return 0
}

func (x *PmsAttrEntity) GetValueSelect() string {
	if x != nil {
		return x.ValueSelect
	}
	return ""
}

func (x *PmsAttrEntity) GetValueType() int32 {
	if x != nil {
		return x.ValueType
	}
	return 0
}

type GetAttrNotCorrelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrGroupId int64  `protobuf:"varint,1,opt,name=attr_group_id,json=attrGroupId,proto3" json:"attr_group_id,omitempty"`
	Page        int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`   //当前页码
	Limit       int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"` //每页记录数
	Sidx        string `protobuf:"bytes,4,opt,name=sidx,proto3" json:"sidx,omitempty"`    //排序字段
	Order       string `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`  //排序方式
	Key         string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`      //检索关键字
}

func (x *GetAttrNotCorrelationRequest) Reset() {
	*x = GetAttrNotCorrelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrNotCorrelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrNotCorrelationRequest) ProtoMessage() {}

func (x *GetAttrNotCorrelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrNotCorrelationRequest.ProtoReflect.Descriptor instead.
func (*GetAttrNotCorrelationRequest) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{72}
}

func (x *GetAttrNotCorrelationRequest) GetAttrGroupId() int64 {
	if x != nil {
		return x.AttrGroupId
	}
	return 0
}

func (x *GetAttrNotCorrelationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAttrNotCorrelationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAttrNotCorrelationRequest) GetSidx() string {
	if x != nil {
		return x.Sidx
	}
	return ""
}

func (x *GetAttrNotCorrelationRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *GetAttrNotCorrelationRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetAttrNotCorrelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount      int32            `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageSize        int32            `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPage       int32            `protobuf:"varint,3,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	CurrPage        int32            `protobuf:"varint,4,opt,name=curr_page,json=currPage,proto3" json:"curr_page,omitempty"`
	PmsAttrEntities []*PmsAttrEntity `protobuf:"bytes,5,rep,name=pms_attr_entities,json=pmsAttrEntities,proto3" json:"pms_attr_entities,omitempty"`
}

func (x *GetAttrNotCorrelationResponse) Reset() {
	*x = GetAttrNotCorrelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttrNotCorrelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttrNotCorrelationResponse) ProtoMessage() {}

func (x *GetAttrNotCorrelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttrNotCorrelationResponse.ProtoReflect.Descriptor instead.
func (*GetAttrNotCorrelationResponse) Descriptor() ([]byte, []int) {
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP(), []int{73}
}

func (x *GetAttrNotCorrelationResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetAttrNotCorrelationResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetAttrNotCorrelationResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *GetAttrNotCorrelationResponse) GetCurrPage() int32 {
	if x != nil {
		return x.CurrPage
	}
	return 0
}

func (x *GetAttrNotCorrelationResponse) GetPmsAttrEntities() []*PmsAttrEntity {
	if x != nil {
		return x.PmsAttrEntities
	}
	return nil
}

var File_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto protoreflect.FileDescriptor

var file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDesc = []byte{
	0x0a, 0x45, 0x6d, 0x61, 0x6c, 0x6c, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2d, 0x6d, 0x61, 0x6c, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2d, 0x6d, 0x61, 0x6c, 0x6c, 0x2d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41,
	0x6d, 0x61, 0x6c, 0x6c, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2d,
	0x6d, 0x61, 0x6c, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2d, 0x6d, 0x61, 0x6c, 0x6c, 0x2d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x44, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x72, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x70, 0x6d, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6d, 0x73, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0f, 0x70, 0x6d, 0x73, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x1d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x72, 0x72, 0x73, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e,
	0x64, 0x41, 0x74, 0x72, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x19, 0x61, 0x74,
	0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x72, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61,
	0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61,
	0x74, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x17, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x2e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72,
	0x49, 0x64, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc5,
	0x01, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61,
	0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3c, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74,
	0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x78, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xe0, 0x02, 0x0a, 0x0d, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x70, 0x75, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x70, 0x75, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x70, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x70, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72,
	0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x73, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x0e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x63,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x5e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x10, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x30, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x01,
	0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f,
	0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x10, 0x53, 0x61,
	0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0x15, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1b, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22, 0x91, 0x02, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x91,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x64, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x64, 0x78, 0x22, 0xc4, 0x01, 0x0a, 0x0b, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c,
	0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x4b, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x22, 0xa5, 0x01,
	0x0a, 0x19, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1f, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x1b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x5b, 0x0a, 0x1f, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x22, 0x0a,
	0x20, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x35, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x86,
	0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x41, 0x74,
	0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xea, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67,
	0x50, 0x61, 0x74, 0x68, 0x22, 0xf6, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x5c, 0x0a, 0x1b, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x18, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x41, 0x74, 0x74, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x3d, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x19, 0x63, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x41, 0x74, 0x74, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x16, 0x63, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0xab, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0xcd, 0x02, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xd9, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c,
	0x61, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xc1, 0x02, 0x0a,
	0x16, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c,
	0x6f, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x19, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x74, 0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb1, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x61, 0x74,
	0x74, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x44, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x70,
	0x6d, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6d, 0x73, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x70, 0x6d,
	0x73, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x90, 0x01,
	0x0a, 0x20, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x6c, 0x0a, 0x21, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x1d, 0x61, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x23, 0x0a, 0x21, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x1b, 0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49,
	0x64, 0x22, 0x92, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x21, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x1d, 0x61, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x02,
	0x0a, 0x0d, 0x50, 0x6d, 0x73, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa8, 0x01,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4e, 0x6f, 0x74, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x78,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xdb, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x4e, 0x6f, 0x74, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x70, 0x6d, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6d, 0x73, 0x41, 0x74, 0x74, 0x72, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x70, 0x6d, 0x73, 0x41, 0x74, 0x74, 0x72, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x32, 0xd0, 0x18, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x70, 0x63, 0x12, 0x53, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6b, 0x0a, 0x18, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61,
	0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43,
	0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x71, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x12, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x6c,
	0x6f, 0x67, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x41,
	0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x53,
	0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x24, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c,
	0x6f, 0x67, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x12, 0x2b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x74, 0x65, 0x6c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4e, 0x6f, 0x74, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4e, 0x6f, 0x74, 0x43, 0x6f, 0x72, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4e, 0x6f, 0x74,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x19, 0x53, 0x61, 0x76,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x74, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x53, 0x61, 0x76, 0x65, 0x53, 0x70, 0x75,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70, 0x75, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x53, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70, 0x75, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x53, 0x70, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x55, 0x70, 0x53, 0x70, 0x75,
	0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70, 0x75, 0x2e, 0x55, 0x70, 0x53,
	0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x73, 0x70, 0x75, 0x2e, 0x55, 0x70, 0x53, 0x70, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x6b, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70, 0x75,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70,
	0x75, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70,
	0x75, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70, 0x75, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x75, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73, 0x70, 0x75,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x75, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x73,
	0x70, 0x75, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x75, 0x41, 0x74, 0x74, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescOnce sync.Once
	file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescData = file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDesc
)

func file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescGZIP() []byte {
	file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescOnce.Do(func() {
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescData)
	})
	return file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDescData
}

var file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes = make([]protoimpl.MessageInfo, 74)
var file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_goTypes = []interface{}{
	(*GetAllGroupAndAttrRelatedWithCatelogRequest)(nil),  // 0: proto.GetAllGroupAndAttrRelatedWithCatelogRequest
	(*AttrGroupAndAtrrsEntity)(nil),                      // 1: proto.AttrGroupAndAtrrsEntity
	(*GetAllGroupAndAttrRelatedWithCatelogResponse)(nil), // 2: proto.GetAllGroupAndAttrRelatedWithCatelogResponse
	(*GetBrandRelatedWithCatelogRequest)(nil),            // 3: proto.GetBrandRelatedWithCatelogRequest
	(*BrandCatelogRelation)(nil),                         // 4: proto.BrandCatelogRelation
	(*GetBrandRelatedWithCatelogResponse)(nil),           // 5: proto.GetBrandRelatedWithCatelogResponse
	(*DeleteAttrRequest)(nil),                            // 6: proto.DeleteAttrRequest
	(*DeleteAttrResponse)(nil),                           // 7: proto.DeleteAttrResponse
	(*UpdateAttrGroupRequest)(nil),                       // 8: proto.UpdateAttrGroupRequest
	(*UpdateAttrGroupResponse)(nil),                      // 9: proto.UpdateAttrGroupResponse
	(*SaveAttrGroupRequest)(nil),                         // 10: proto.SaveAttrGroupRequest
	(*SaveAttrGroupResponse)(nil),                        // 11: proto.SaveAttrGroupResponse
	(*DeleteAttrGroupRequest)(nil),                       // 12: proto.DeleteAttrGroupRequest
	(*DeleteAttrGroupResponse)(nil),                      // 13: proto.DeleteAttrGroupResponse
	(*SearchSpuInfoRequest)(nil),                         // 14: proto.SearchSpuInfoRequest
	(*SpuInfoEntity)(nil),                                // 15: proto.SpuInfoEntity
	(*SearchSpuInfoResponse)(nil),                        // 16: proto.SearchSpuInfoResponse
	(*CategoryEntity)(nil),                               // 17: proto.CategoryEntity
	(*ListCategoryTreeRequest)(nil),                      // 18: proto.ListCategoryTreeRequest
	(*ListCategoryTreeResponse)(nil),                     // 19: proto.ListCategoryTreeResponse
	(*DeleteCategoryRequest)(nil),                        // 20: proto.DeleteCategoryRequest
	(*DeleteCategoryResponse)(nil),                       // 21: proto.DeleteCategoryResponse
	(*SaveCategoryRequest)(nil),                          // 22: proto.SaveCategoryRequest
	(*SaveCategoryResponse)(nil),                         // 23: proto.SaveCategoryResponse
	(*UpdateCategoryRequest)(nil),                        // 24: proto.UpdateCategoryRequest
	(*UpdateCategoryResponse)(nil),                       // 25: proto.UpdateCategoryResponse
	(*SaveBrandRequest)(nil),                             // 26: proto.SaveBrandRequest
	(*SaveBrandResponse)(nil),                            // 27: proto.SaveBrandResponse
	(*DeleteBrandRequest)(nil),                           // 28: proto.DeleteBrandRequest
	(*DeleteBrandResponse)(nil),                          // 29: proto.DeleteBrandResponse
	(*UpdateBrandStatusRequest)(nil),                     // 30: proto.UpdateBrandStatusRequest
	(*UpdateBrandStatusResponse)(nil),                    // 31: proto.UpdateBrandStatusResponse
	(*GetCategoryInfoRequest)(nil),                       // 32: proto.GetCategoryInfoRequest
	(*GetCategoryInfoResponse)(nil),                      // 33: proto.GetCategoryInfoResponse
	(*GetBrandListRequest)(nil),                          // 34: proto.GetBrandListRequest
	(*BrandEntity)(nil),                                  // 35: proto.BrandEntity
	(*GetBrandListResponse)(nil),                         // 36: proto.GetBrandListResponse
	(*GetBrandInfoRequest)(nil),                          // 37: proto.GetBrandInfoRequest
	(*GetBrandInfoResponse)(nil),                         // 38: proto.GetBrandInfoResponse
	(*UpdateBrandRequest)(nil),                           // 39: proto.UpdateBrandRequest
	(*UpdateBrandResponse)(nil),                          // 40: proto.UpdateBrandResponse
	(*GetBrandRelatedCateLogRequest)(nil),                // 41: proto.GetBrandRelatedCateLogRequest
	(*BrandRelatedCateLogEntity)(nil),                    // 42: proto.BrandRelatedCateLogEntity
	(*GetBrandRelatedCateLogResponse)(nil),               // 43: proto.GetBrandRelatedCateLogResponse
	(*SaveBrandCatelogRelationRequest)(nil),              // 44: proto.SaveBrandCatelogRelationRequest
	(*SaveBrandCatelogRelationResponse)(nil),             // 45: proto.SaveBrandCatelogRelationResponse
	(*DeleteBrandCatelogRelationRequest)(nil),            // 46: proto.DeleteBrandCatelogRelationRequest
	(*DeleteBrandCatelogRelationResponse)(nil),           // 47: proto.DeleteBrandCatelogRelationResponse
	(*ListCatelogAttrGroupRequest)(nil),                  // 48: proto.ListCatelogAttrGroupRequest
	(*CatelogAttrGroupEntity)(nil),                       // 49: proto.CatelogAttrGroupEntity
	(*ListCatelogAttrGroupResponse)(nil),                 // 50: proto.ListCatelogAttrGroupResponse
	(*GetAttrGroupInfoRequest)(nil),                      // 51: proto.GetAttrGroupInfoRequest
	(*GetAttrGroupInfoResponse)(nil),                     // 52: proto.GetAttrGroupInfoResponse
	(*GetAttrListRelatedWithCatelogRequest)(nil),         // 53: proto.GetAttrListRelatedWithCatelogRequest
	(*AttrEntity)(nil),                                   // 54: proto.AttrEntity
	(*GetAttrListRelatedWithCatelogResponse)(nil),        // 55: proto.GetAttrListRelatedWithCatelogResponse
	(*SaveProductAttrRequest)(nil),                       // 56: proto.SaveProductAttrRequest
	(*SaveProductAttrResponse)(nil),                      // 57: proto.SaveProductAttrResponse
	(*GetAttrInfoRequest)(nil),                           // 58: proto.GetAttrInfoRequest
	(*GetAttrInfoResponse)(nil),                          // 59: proto.GetAttrInfoResponse
	(*UpdateAttrRequest)(nil),                            // 60: proto.UpdateAttrRequest
	(*UpdateAttrResponse)(nil),                           // 61: proto.UpdateAttrResponse
	(*GetSaleAttrRelatedCatelogRequest)(nil),             // 62: proto.GetSaleAttrRelatedCatelogRequest
	(*GetSaleAttrRelatedCatelogResponse)(nil),            // 63: proto.GetSaleAttrRelatedCatelogResponse
	(*GetAttrRelatedAttrGroupRequest)(nil),               // 64: proto.GetAttrRelatedAttrGroupRequest
	(*GetAttrRelatedAttrGroupResponse)(nil),              // 65: proto.GetAttrRelatedAttrGroupResponse
	(*SaveAttrAttrGroupRelationRequest)(nil),             // 66: proto.SaveAttrAttrGroupRelationRequest
	(*SaveAttrAttrGroupRelationResponse)(nil),            // 67: proto.SaveAttrAttrGroupRelationResponse
	(*AttrAttrGroupRelationEntity)(nil),                  // 68: proto.AttrAttrGroupRelationEntity
	(*DeleteAttrAttrGroupRelationRequest)(nil),           // 69: proto.DeleteAttrAttrGroupRelationRequest
	(*DeleteAttrAttrGroupRelationResponse)(nil),          // 70: proto.DeleteAttrAttrGroupRelationResponse
	(*PmsAttrEntity)(nil),                                // 71: proto.PmsAttrEntity
	(*GetAttrNotCorrelationRequest)(nil),                 // 72: proto.GetAttrNotCorrelationRequest
	(*GetAttrNotCorrelationResponse)(nil),                // 73: proto.GetAttrNotCorrelationResponse
	(*SaveSpuRequest)(nil),                               // 74: proto_spu.SaveSpuRequest
	(*UpSpuRequest)(nil),                                 // 75: proto_spu.UpSpuRequest
	(*SearchSkuInfoRequest)(nil),                         // 76: proto_spu.SearchSkuInfoRequest
	(*GetSpuInfoRequest)(nil),                            // 77: proto_spu.GetSpuInfoRequest
	(*UpdateSpuAttrsRequest)(nil),                        // 78: proto_spu.UpdateSpuAttrsRequest
	(*SaveSpuResponse)(nil),                              // 79: proto_spu.SaveSpuResponse
	(*UpSpuResponse)(nil),                                // 80: proto_spu.UpSpuResponse
	(*SearchSkuInfoResponse)(nil),                        // 81: proto_spu.SearchSkuInfoResponse
	(*GetSpuInfoResponse)(nil),                           // 82: proto_spu.GetSpuInfoResponse
	(*UpdateSpuAttrsResponse)(nil),                       // 83: proto_spu.UpdateSpuAttrsResponse
}
var file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_depIdxs = []int32{
	71, // 0: proto.AttrGroupAndAtrrsEntity.pms_attr_entities:type_name -> proto.PmsAttrEntity
	1,  // 1: proto.GetAllGroupAndAttrRelatedWithCatelogResponse.attr_group_and_atrrs_entities:type_name -> proto.AttrGroupAndAtrrsEntity
	4,  // 2: proto.GetBrandRelatedWithCatelogResponse.brand_catelog_relations:type_name -> proto.BrandCatelogRelation
	15, // 3: proto.SearchSpuInfoResponse.spu_info_entities:type_name -> proto.SpuInfoEntity
	17, // 4: proto.CategoryEntity.children:type_name -> proto.CategoryEntity
	17, // 5: proto.ListCategoryTreeResponse.category_entities:type_name -> proto.CategoryEntity
	35, // 6: proto.SaveBrandRequest.brand_entity:type_name -> proto.BrandEntity
	35, // 7: proto.GetBrandListResponse.brand_entities:type_name -> proto.BrandEntity
	35, // 8: proto.GetBrandInfoResponse.brand_entity:type_name -> proto.BrandEntity
	35, // 9: proto.UpdateBrandRequest.brand_entity:type_name -> proto.BrandEntity
	42, // 10: proto.GetBrandRelatedCateLogResponse.brand_related_cate_log_entities:type_name -> proto.BrandRelatedCateLogEntity
	49, // 11: proto.ListCatelogAttrGroupResponse.catelog_attr_group_entities:type_name -> proto.CatelogAttrGroupEntity
	49, // 12: proto.GetAttrGroupInfoResponse.catelog_attr_group_entity:type_name -> proto.CatelogAttrGroupEntity
	54, // 13: proto.GetAttrListRelatedWithCatelogResponse.attr_entities:type_name -> proto.AttrEntity
	54, // 14: proto.GetSaleAttrRelatedCatelogResponse.attr_entities:type_name -> proto.AttrEntity
	71, // 15: proto.GetAttrRelatedAttrGroupResponse.pms_attr_entities:type_name -> proto.PmsAttrEntity
	68, // 16: proto.SaveAttrAttrGroupRelationRequest.attr_attr_group_relation_entities:type_name -> proto.AttrAttrGroupRelationEntity
	68, // 17: proto.DeleteAttrAttrGroupRelationRequest.attr_attr_group_relation_entities:type_name -> proto.AttrAttrGroupRelationEntity
	71, // 18: proto.GetAttrNotCorrelationResponse.pms_attr_entities:type_name -> proto.PmsAttrEntity
	18, // 19: proto.ProductRpc.ListCategoryTree:input_type -> proto.ListCategoryTreeRequest
	20, // 20: proto.ProductRpc.DeleteCategory:input_type -> proto.DeleteCategoryRequest
	22, // 21: proto.ProductRpc.SaveCategory:input_type -> proto.SaveCategoryRequest
	24, // 22: proto.ProductRpc.UpdateCategory:input_type -> proto.UpdateCategoryRequest
	32, // 23: proto.ProductRpc.GetCategoryInfo:input_type -> proto.GetCategoryInfoRequest
	34, // 24: proto.ProductRpc.GetBrandList:input_type -> proto.GetBrandListRequest
	37, // 25: proto.ProductRpc.GetBrandInfo:input_type -> proto.GetBrandInfoRequest
	26, // 26: proto.ProductRpc.SaveBrand:input_type -> proto.SaveBrandRequest
	28, // 27: proto.ProductRpc.DeleteBrand:input_type -> proto.DeleteBrandRequest
	39, // 28: proto.ProductRpc.UpdateBrand:input_type -> proto.UpdateBrandRequest
	30, // 29: proto.ProductRpc.UpdateBrandStatus:input_type -> proto.UpdateBrandStatusRequest
	41, // 30: proto.ProductRpc.GetBrandRelatedCateLog:input_type -> proto.GetBrandRelatedCateLogRequest
	44, // 31: proto.ProductRpc.SaveBrandCatelogRelation:input_type -> proto.SaveBrandCatelogRelationRequest
	46, // 32: proto.ProductRpc.DeleteBrandCatelogRelation:input_type -> proto.DeleteBrandCatelogRelationRequest
	3,  // 33: proto.ProductRpc.GetBrandRelatedWithCatelog:input_type -> proto.GetBrandRelatedWithCatelogRequest
	48, // 34: proto.ProductRpc.ListCatelogAttrGroup:input_type -> proto.ListCatelogAttrGroupRequest
	51, // 35: proto.ProductRpc.GetAttrGroupInfo:input_type -> proto.GetAttrGroupInfoRequest
	8,  // 36: proto.ProductRpc.UpdateAttrGroup:input_type -> proto.UpdateAttrGroupRequest
	10, // 37: proto.ProductRpc.SaveAttrGroup:input_type -> proto.SaveAttrGroupRequest
	12, // 38: proto.ProductRpc.DeleteAttrGroup:input_type -> proto.DeleteAttrGroupRequest
	0,  // 39: proto.ProductRpc.GetAllGroupAndAttrRelatedWithCatelog:input_type -> proto.GetAllGroupAndAttrRelatedWithCatelogRequest
	53, // 40: proto.ProductRpc.GetAttrListRelatedWithCatelog:input_type -> proto.GetAttrListRelatedWithCatelogRequest
	56, // 41: proto.ProductRpc.SaveProductAttr:input_type -> proto.SaveProductAttrRequest
	58, // 42: proto.ProductRpc.GetAttrInfo:input_type -> proto.GetAttrInfoRequest
	72, // 43: proto.ProductRpc.GetAttrNotCorrelation:input_type -> proto.GetAttrNotCorrelationRequest
	69, // 44: proto.ProductRpc.DeleteAttrAttrGroupRelation:input_type -> proto.DeleteAttrAttrGroupRelationRequest
	66, // 45: proto.ProductRpc.SaveAttrAttrGroupRelation:input_type -> proto.SaveAttrAttrGroupRelationRequest
	64, // 46: proto.ProductRpc.GetAttrRelatedAttrGroup:input_type -> proto.GetAttrRelatedAttrGroupRequest
	60, // 47: proto.ProductRpc.UpdateAttr:input_type -> proto.UpdateAttrRequest
	6,  // 48: proto.ProductRpc.DeleteAttr:input_type -> proto.DeleteAttrRequest
	14, // 49: proto.ProductRpc.SearchSpuInfo:input_type -> proto.SearchSpuInfoRequest
	74, // 50: proto.ProductRpc.SaveSpu:input_type -> proto_spu.SaveSpuRequest
	75, // 51: proto.ProductRpc.UpSpu:input_type -> proto_spu.UpSpuRequest
	76, // 52: proto.ProductRpc.SearchSkuInfo:input_type -> proto_spu.SearchSkuInfoRequest
	77, // 53: proto.ProductRpc.GetSpuInfo:input_type -> proto_spu.GetSpuInfoRequest
	78, // 54: proto.ProductRpc.UpdateSpuAttrs:input_type -> proto_spu.UpdateSpuAttrsRequest
	19, // 55: proto.ProductRpc.ListCategoryTree:output_type -> proto.ListCategoryTreeResponse
	21, // 56: proto.ProductRpc.DeleteCategory:output_type -> proto.DeleteCategoryResponse
	23, // 57: proto.ProductRpc.SaveCategory:output_type -> proto.SaveCategoryResponse
	25, // 58: proto.ProductRpc.UpdateCategory:output_type -> proto.UpdateCategoryResponse
	33, // 59: proto.ProductRpc.GetCategoryInfo:output_type -> proto.GetCategoryInfoResponse
	36, // 60: proto.ProductRpc.GetBrandList:output_type -> proto.GetBrandListResponse
	38, // 61: proto.ProductRpc.GetBrandInfo:output_type -> proto.GetBrandInfoResponse
	27, // 62: proto.ProductRpc.SaveBrand:output_type -> proto.SaveBrandResponse
	29, // 63: proto.ProductRpc.DeleteBrand:output_type -> proto.DeleteBrandResponse
	40, // 64: proto.ProductRpc.UpdateBrand:output_type -> proto.UpdateBrandResponse
	31, // 65: proto.ProductRpc.UpdateBrandStatus:output_type -> proto.UpdateBrandStatusResponse
	43, // 66: proto.ProductRpc.GetBrandRelatedCateLog:output_type -> proto.GetBrandRelatedCateLogResponse
	45, // 67: proto.ProductRpc.SaveBrandCatelogRelation:output_type -> proto.SaveBrandCatelogRelationResponse
	47, // 68: proto.ProductRpc.DeleteBrandCatelogRelation:output_type -> proto.DeleteBrandCatelogRelationResponse
	5,  // 69: proto.ProductRpc.GetBrandRelatedWithCatelog:output_type -> proto.GetBrandRelatedWithCatelogResponse
	50, // 70: proto.ProductRpc.ListCatelogAttrGroup:output_type -> proto.ListCatelogAttrGroupResponse
	52, // 71: proto.ProductRpc.GetAttrGroupInfo:output_type -> proto.GetAttrGroupInfoResponse
	9,  // 72: proto.ProductRpc.UpdateAttrGroup:output_type -> proto.UpdateAttrGroupResponse
	11, // 73: proto.ProductRpc.SaveAttrGroup:output_type -> proto.SaveAttrGroupResponse
	13, // 74: proto.ProductRpc.DeleteAttrGroup:output_type -> proto.DeleteAttrGroupResponse
	2,  // 75: proto.ProductRpc.GetAllGroupAndAttrRelatedWithCatelog:output_type -> proto.GetAllGroupAndAttrRelatedWithCatelogResponse
	55, // 76: proto.ProductRpc.GetAttrListRelatedWithCatelog:output_type -> proto.GetAttrListRelatedWithCatelogResponse
	57, // 77: proto.ProductRpc.SaveProductAttr:output_type -> proto.SaveProductAttrResponse
	59, // 78: proto.ProductRpc.GetAttrInfo:output_type -> proto.GetAttrInfoResponse
	73, // 79: proto.ProductRpc.GetAttrNotCorrelation:output_type -> proto.GetAttrNotCorrelationResponse
	70, // 80: proto.ProductRpc.DeleteAttrAttrGroupRelation:output_type -> proto.DeleteAttrAttrGroupRelationResponse
	67, // 81: proto.ProductRpc.SaveAttrAttrGroupRelation:output_type -> proto.SaveAttrAttrGroupRelationResponse
	65, // 82: proto.ProductRpc.GetAttrRelatedAttrGroup:output_type -> proto.GetAttrRelatedAttrGroupResponse
	61, // 83: proto.ProductRpc.UpdateAttr:output_type -> proto.UpdateAttrResponse
	7,  // 84: proto.ProductRpc.DeleteAttr:output_type -> proto.DeleteAttrResponse
	16, // 85: proto.ProductRpc.SearchSpuInfo:output_type -> proto.SearchSpuInfoResponse
	79, // 86: proto.ProductRpc.SaveSpu:output_type -> proto_spu.SaveSpuResponse
	80, // 87: proto.ProductRpc.UpSpu:output_type -> proto_spu.UpSpuResponse
	81, // 88: proto.ProductRpc.SearchSkuInfo:output_type -> proto_spu.SearchSkuInfoResponse
	82, // 89: proto.ProductRpc.GetSpuInfo:output_type -> proto_spu.GetSpuInfoResponse
	83, // 90: proto.ProductRpc.UpdateSpuAttrs:output_type -> proto_spu.UpdateSpuAttrsResponse
	55, // [55:91] is the sub-list for method output_type
	19, // [19:55] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_init() }
func file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_init() {
	if File_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto != nil {
		return
	}
	file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_spu_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGroupAndAttrRelatedWithCatelogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrGroupAndAtrrsEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGroupAndAttrRelatedWithCatelogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandRelatedWithCatelogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandCatelogRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandRelatedWithCatelogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttrGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttrGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAttrGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAttrGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttrGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttrGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpuInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInfoEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpuInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCategoryTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCategoryTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBrandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBrandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBrandStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBrandStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCategoryInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBrandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandRelatedCateLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandRelatedCateLogEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBrandRelatedCateLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBrandCatelogRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveBrandCatelogRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBrandCatelogRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBrandCatelogRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatelogAttrGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatelogAttrGroupEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatelogAttrGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrGroupInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrGroupInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrListRelatedWithCatelogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrListRelatedWithCatelogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductAttrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductAttrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSaleAttrRelatedCatelogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSaleAttrRelatedCatelogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrRelatedAttrGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrRelatedAttrGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAttrAttrGroupRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAttrAttrGroupRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrAttrGroupRelationEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttrAttrGroupRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAttrAttrGroupRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PmsAttrEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrNotCorrelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttrNotCorrelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   74,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_goTypes,
		DependencyIndexes: file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_depIdxs,
		MessageInfos:      file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_msgTypes,
	}.Build()
	File_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto = out.File
	file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_rawDesc = nil
	file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_goTypes = nil
	file_mall_demo_micro_mall_api_proto_micro_mall_product_proto_product_proto_depIdxs = nil
}
